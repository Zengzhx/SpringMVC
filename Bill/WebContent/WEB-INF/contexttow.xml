<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xmlns:cache="http://www.springframework.org/schema/cache"  
    xsi:schemaLocation="  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx.xsd  
    http://www.springframework.org/schema/jdbc  
    http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd  
    http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache-4.1.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop.xsd  
    http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util.xsd">  
    
	<!-- 构造方法注入 -->
	<!-- <bean id="ptwo"  class="com.ez.dp.model.Person">
    	<constructor-arg value="lisi" index="0"></constructor-arg>
    	<constructor-arg value="32" index="1"></constructor-arg>
    </bean>

     <bean id="demo"  class="com.ez.dp.context.demo">
    	<property name="Person" ref="Person"></property>
    	
    </bean> -->
    
    <!--声明目标类-->  
  <!--   <bean id="TargetClass" class="com.ez.dp.aop.TargetClass"></bean> -->
    <!--声明扩展类-->  
<!--     <bean id="extendsClass" class="com.ez.dp.aop.extendsClass"></bean> -->

   <!--织入扩展类，并声明在哪个方法上执行扩展类-->  
 <!--    <aop:config>
    	<aop:aspect id="extendAspect" ref="extendsClass">
    		<aop:pointcut expression="execution( public void targetmethod() )" id="extendsPoincat"/>
    		在目标方法执行后执行的方法  
    		<aop:before method="beforemethod" pointcut-ref="extendsPoincat"/>
    		 在目标方法执行后执行的方法  
        	<aop:after method="aftermethod" pointcut-ref="extendsPoincat" />  
    	</aop:aspect>
    </aop:config> -->

 </beans>